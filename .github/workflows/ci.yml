name: GCP CI

on:
  push:
    branches: ['**']      # 所有分支都會觸發（含 codex/**）
  pull_request:
  workflow_dispatch: {}   # 允許在 Actions 頁手動執行

jobs:
  gcp-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
      FIRESTORE_COLLECTION: ${{ secrets.FIRESTORE_COLLECTION || 'visitors' }}
      FIRESTORE_EVENTS_COLLECTION: ${{ secrets.FIRESTORE_EVENTS_COLLECTION || 'events' }}
      FIRESTORE_DATABASE_ID: ${{ secrets.FIRESTORE_DATABASE_ID || '(default)' }}   # ← 指定你的 DB ID
      CLOUD_RUN_URL: ${{ secrets.CLOUD_RUN_URL }}
      CLOUD_RUN_HEALTH_PATH: ${{ secrets.CLOUD_RUN_HEALTH_PATH || '/' }}          # ← 先用根路徑最穩
      CLOUD_RUN_DETECT_PATH: ${{ secrets.CLOUD_RUN_DETECT_PATH }}
      ESP32_IMAGE_URL: ${{ secrets.ESP32_IMAGE_URL }}
      ENABLE_EMBEDDING: ${{ vars.ENABLE_EMBEDDING || '0' }}  # 設為 1 會安裝 dlib/opencv 並跑整合流程
    steps:
      - uses: actions/checkout@v4

      # 用 env 注入 Secret，避免 *** 遮蔽；POSIX [ ] 相容 sh/bash
      - name: Write GCP service account key
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        shell: bash
        run: |
          if [ -z "$GCP_SA_KEY" ]; then
            echo "❌ Missing secret GCP_SA_KEY" >&2
            exit 1
          fi
          printf '%s' "$GCP_SA_KEY" > "$RUNNER_TEMP/gcp-key.json"
          echo "GOOGLE_APPLICATION_CREDENTIALS=$RUNNER_TEMP/gcp-key.json" >> "$GITHUB_ENV"
          echo "✅ SA key written to $RUNNER_TEMP/gcp-key.json"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 基礎依賴（包含 google-auth 的 requests 外掛）
      - name: Install base deps (Vision/Firestore/Auth/HTTP/Numpy)
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install "google-auth[requests]" google-cloud-vision google-cloud-firestore requests numpy

      # 可選：人臉嵌入需要較重的套件
      - name: Install optional embedding deps (OpenCV + dlib + face_recognition)
        if: ${{ env.ENABLE_EMBEDDING == '1' }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libgl1
          pip install pillow opencv-python dlib==19.24.4 face_recognition scikit-learn

      - name: Init SQLite if present (optional)
        if: ${{ hashFiles('db/init_db.py') != '' }}
        run: python db/init_db.py

      - name: Connectivity tests (Vision / Firestore / Cloud Run)
        if: ${{ hashFiles('scripts/gcp_connect_test.py') != '' }}
        run: python scripts/gcp_connect_test.py

      - name: Integrated face flow (Vision→Embed→Firestore→Cloud Run)
        if: ${{ env.ENABLE_EMBEDDING == '1' && hashFiles('scripts/integrated_face_flow.py') != '' }}
        run: python scripts/integrated_face_flow.py

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gcp-logs
          path: |
            gcp_test.log
            vision_test.log
            firestore_test.log
            cloudrun_test.log
            integrated_test.log
          if-no-files-found: warn
